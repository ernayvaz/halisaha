// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/ev/[code]" | "/ev/[code]/history" | "/ev/[code]/landing" | "/ev/[code]/lineup" | "/ev/[code]/lobby" | "/ev/[code]/mvp" | "/ev/[code]/nickname" | "/ev/[code]/teams" | "/ev/landing" | "/me"
type AppRouteHandlerRoutes = "/api/cron/cleanup" | "/api/cron/match-timers" | "/api/debug/ping" | "/api/debug/prisma" | "/api/debug/smoke" | "/api/events" | "/api/events/[id]" | "/api/events/[id]/finish" | "/api/events/[id]/flags" | "/api/events/[id]/participants" | "/api/events/[id]/participants/[participantId]" | "/api/events/[id]/poll" | "/api/events/[id]/teams" | "/api/me" | "/api/me/history" | "/api/nickname/check" | "/api/notifications/subscribe" | "/api/participants/[id]" | "/api/participants/[id]/role" | "/api/polls/[pollId]/vote" | "/api/qrcode" | "/api/teams/[teamId]/assignments" | "/api/teams/[teamId]/positions" | "/api/users/[id]/card" | "/api/users/anonymous"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/cron/cleanup": {}
  "/api/cron/match-timers": {}
  "/api/debug/ping": {}
  "/api/debug/prisma": {}
  "/api/debug/smoke": {}
  "/api/events": {}
  "/api/events/[id]": { "id": string; }
  "/api/events/[id]/finish": { "id": string; }
  "/api/events/[id]/flags": { "id": string; }
  "/api/events/[id]/participants": { "id": string; }
  "/api/events/[id]/participants/[participantId]": { "id": string; "participantId": string; }
  "/api/events/[id]/poll": { "id": string; }
  "/api/events/[id]/teams": { "id": string; }
  "/api/me": {}
  "/api/me/history": {}
  "/api/nickname/check": {}
  "/api/notifications/subscribe": {}
  "/api/participants/[id]": { "id": string; }
  "/api/participants/[id]/role": { "id": string; }
  "/api/polls/[pollId]/vote": { "pollId": string; }
  "/api/qrcode": {}
  "/api/teams/[teamId]/assignments": { "teamId": string; }
  "/api/teams/[teamId]/positions": { "teamId": string; }
  "/api/users/[id]/card": { "id": string; }
  "/api/users/anonymous": {}
  "/ev/[code]": { "code": string; }
  "/ev/[code]/history": { "code": string; }
  "/ev/[code]/landing": { "code": string; }
  "/ev/[code]/lineup": { "code": string; }
  "/ev/[code]/lobby": { "code": string; }
  "/ev/[code]/mvp": { "code": string; }
  "/ev/[code]/nickname": { "code": string; }
  "/ev/[code]/teams": { "code": string; }
  "/ev/landing": {}
  "/me": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
