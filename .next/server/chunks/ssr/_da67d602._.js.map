{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/src/app/ev/[code]/nickname/page.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, useRouter, useSearchParams } from \"next/navigation\";\n\ntype UserCard = { id: string; foot: \"L\"|\"R\"|null; pace: number|null; shoot: number|null; pass: number|null; defend: number|null };\n\nexport default function NicknamePage() {\n  const params = useParams<{ code: string }>();\n  const search = useSearchParams();\n  const router = useRouter();\n  const [handle, setHandle] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [available, setAvailable] = useState<null | boolean>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [card, setCard] = useState<UserCard | null>(null);\n  const mode = (search.get(\"mode\") as \"join\"|\"view\") || \"join\";\n  const [cardSaved, setCardSaved] = useState(false);\n  const [me, setMe] = useState<{ id: string } | null>(null);\n  const [eventId, setEventId] = useState<string | null>(null);\n  const [autoJoined, setAutoJoined] = useState<boolean>(false);\n\n  const check = async (h: string) => {\n    setHandle(h);\n    if (!h || h.length < 3) { setAvailable(null); return; }\n    const r = await fetch('/api/nickname/check', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ handle: h.toLowerCase() }) });\n    const d = await r.json(); setAvailable(d.available ?? false);\n  };\n\n  const saveNickname = async () => {\n    const r = await fetch('/api/users/anonymous', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ handle: handle.toLowerCase(), displayName: displayName || handle }) });\n    const d = await r.json();\n    if (r.ok) {\n      setUserId(d.id);\n      // If user initiated Join, auto-join immediately after nickname\n      try {\n        if (mode === 'join' && eventId) {\n          const pj = await fetch(`/api/events/${eventId}/participants`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ userId: d.id, mode: 'join' }) });\n          if (pj.ok) setAutoJoined(true);\n        }\n      } catch {}\n    } else {\n      alert(d.error || 'Error');\n    }\n  };\n\n  useEffect(() => {\n    const loadCard = async () => {\n      if (!userId) return;\n      const r = await fetch(`/api/users/${userId}/card`);\n      if (r.ok) setCard(await r.json());\n    };\n    loadCard();\n  }, [userId]);\n\n  useEffect(() => {\n    (async () => { try { const m = await fetch('/api/me'); if (m.ok) setMe(await m.json()); } catch {} })();\n  }, []);\n\n  useEffect(() => {\n    const loadEvent = async () => {\n      try {\n        const r = await fetch(`/api/events?code=${encodeURIComponent(params.code as string)}`);\n        if (r.ok) { const e = await r.json(); setEventId(e.id); }\n      } catch {}\n    };\n    loadEvent();\n  }, [params.code]);\n\n  const ensureBase = (): UserCard => (\n    card || { id: userId || 'me', foot: 'R', pace: 3, shoot: 3, pass: 3, defend: 3 }\n  );\n\n  const isCardValid = (c: UserCard|null) => !!c && !!c.foot && [c.pace,c.shoot,c.pass,c.defend].every(v=>typeof v==='number' && v>=1 && v<=5);\n\n  const saveCard = async () => {\n    if (!userId) return;\n    const c = ensureBase();\n    if (!isCardValid(c)) { alert('Please complete your player profile card'); return; }\n    const payload = { foot: c.foot, pace: c.pace, shoot: c.shoot, pass: c.pass, defend: c.defend };\n    const r = await fetch(`/api/users/${userId}/card`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\n    if (!r.ok) { const d = await r.json(); alert(d.error || 'Error'); return; }\n    setCardSaved(true);\n    // On view mode, register view; on join, we already auto-joined\n    const ev = await fetch(`/api/events?code=${encodeURIComponent(params.code as string)}`);\n    const e = await ev.json();\n    if (mode !== 'join') {\n      await fetch(`/api/events/${e.id}/participants`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ mode: 'view' }) });\n    }\n    router.push(`/ev/${params.code}/teams`);\n  };\n\n  return (\n    <main className=\"p-6 max-w-xl mx-auto space-y-6\">\n      <section className=\"space-y-3\">\n        <h1 className=\"text-xl font-semibold\">Nickname</h1>\n        <div>\n          <label className=\"block text-sm\">Handle</label>\n          <input className=\"border rounded p-2 w-full\" value={handle} onChange={(e)=>check(e.target.value)} />\n          {available !== null && <p className={`text-sm ${available?'text-green-600':'text-red-600'}`}>{available?'Available':'Taken/Invalid'}</p>}\n        </div>\n        <div>\n          <label className=\"block text-sm\">Display name</label>\n          <input className=\"border rounded p-2 w-full\" value={displayName} onChange={(e)=>setDisplayName(e.target.value)} />\n        </div>\n        <button disabled={!available} onClick={saveNickname} className=\"bg-blue-600 disabled:opacity-50 text-white px-4 py-2 rounded\">Save handle</button>\n      </section>\n\n      {userId && (\n        <section className=\"space-y-3\">\n          <h2 className=\"text-lg font-semibold\">Player Profile Card (required)</h2>\n          <div className=\"rounded-xl border bg-white text-black shadow p-4\">\n            <div className=\"text-center font-semibold mb-2\">{displayName || handle || 'Your Name'}</div>\n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm\">Pace</label>\n                <select className=\"border rounded p-2 w-full\" value={ensureBase().pace ?? 3} onChange={(e)=>setCard({ ...ensureBase(), pace: parseInt(e.target.value||'3',10) })}>\n                  <option value={1}>1 - Slow</option>\n                  <option value={2}>2 - Below Average</option>\n                  <option value={3}>3 - Average</option>\n                  <option value={4}>4 - Fast</option>\n                  <option value={5}>5 - Very Fast</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm\">Shoot</label>\n                <select className=\"border rounded p-2 w-full\" value={ensureBase().shoot ?? 3} onChange={(e)=>setCard({ ...ensureBase(), shoot: parseInt(e.target.value||'3',10) })}>\n                  <option value={1}>1 - Poor</option>\n                  <option value={2}>2 - Below Average</option>\n                  <option value={3}>3 - Average</option>\n                  <option value={4}>4 - Good</option>\n                  <option value={5}>5 - Excellent</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm\">Pass</label>\n                <select className=\"border rounded p-2 w-full\" value={ensureBase().pass ?? 3} onChange={(e)=>setCard({ ...ensureBase(), pass: parseInt(e.target.value||'3',10) })}>\n                  <option value={1}>1 - Poor</option>\n                  <option value={2}>2 - Below Average</option>\n                  <option value={3}>3 - Average</option>\n                  <option value={4}>4 - Good</option>\n                  <option value={5}>5 - Excellent</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm\">Defend</label>\n                <select className=\"border rounded p-2 w-full\" value={ensureBase().defend ?? 3} onChange={(e)=>setCard({ ...ensureBase(), defend: parseInt(e.target.value||'3',10) })}>\n                  <option value={1}>1 - Poor</option>\n                  <option value={2}>2 - Below Average</option>\n                  <option value={3}>3 - Average</option>\n                  <option value={4}>4 - Good</option>\n                  <option value={5}>5 - Excellent</option>\n                </select>\n              </div>\n              <div className=\"col-span-2\">\n                <label className=\"block text-sm\">Preferred Foot</label>\n                <select className=\"border rounded p-2 w-full\" value={ensureBase().foot ?? ''} onChange={(e)=>setCard({ ...ensureBase(), foot: e.target.value as 'L'|'R' })}>\n                  <option value=\"\">Select your preferred foot</option>\n                  <option value=\"R\">Right Foot</option>\n                  <option value=\"L\">Left Foot</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex gap-2\">\n            <button onClick={saveCard} className=\"bg-green-600 text-white px-3 py-2 rounded\">Save and continue</button>\n          </div>\n        </section>\n      )}\n    </main>\n  );\n}\n\n\n"],"names":[],"mappings":"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","ignoreList":[0]}