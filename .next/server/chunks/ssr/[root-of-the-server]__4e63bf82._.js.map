{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/src/app/ev/[code]/lobby/page.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport { subscribe, type RealtimeEvent } from '@/lib/realtime';\n\ntype Participant = { id: string; isGuest: boolean; guestName: string|null; role?: string; user?: { id: string; handle: string; displayName: string; badges?: { level: number; count: number }[] } };\ntype UserCard = { id: string; foot: \"L\"|\"R\"|null; pace: number|null; shoot: number|null; pass: number|null; defend: number|null };\n\nexport default function Lobby() {\n  const params = useParams<{ code: string }>();\n  const [eventId, setEventId] = useState<string | null>(null);\n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const [selected, setSelected] = useState<Participant | null>(null);\n  const [selectedCard, setSelectedCard] = useState<UserCard | null>(null);\n\n  useEffect(() => {\n    const code = params?.code as string;\n    if (!code) return;\n    const run = async () => {\n      const r = await fetch(`/api/events?code=${encodeURIComponent(code)}`);\n      if (!r.ok) return;\n      const e = await r.json();\n      setEventId(e.id);\n      const plist = await fetch(`/api/events/${e.id}/participants`).then(x=>x.json());\n      setParticipants(plist);\n    };\n    run();\n    let unsub = () => {};\n    (async () => {\n      const e = await fetch(`/api/events?code=${encodeURIComponent(code)}`).then(x=>x.json());\n      unsub = subscribe(e.id, (evt: RealtimeEvent)=>{\n        if (evt.type==='participants_updated' || evt.type==='flags_updated') {\n          fetch(`/api/events/${e.id}/participants`).then(x=>x.json()).then(setParticipants);\n        }\n      });\n    })();\n    return () => unsub();\n  }, [params?.code]);\n\n  useEffect(() => {\n    const loadCard = async () => {\n      setSelectedCard(null);\n      if (!selected?.user?.id) return;\n      const r = await fetch(`/api/users/${selected.user.id}/card`);\n      if (r.ok) setSelectedCard(await r.json());\n    };\n    loadCard();\n  }, [selected?.user?.id]);\n\n  const MVPBadge = ({ p }: { p: Participant }) => {\n    const b = p.user?.badges && p.user.badges[0];\n    if (!b) return null;\n    return <span title={`MVP Lv${b.level}`} className=\"ml-2 text-xs inline-flex items-center\">üèÖ Lv{b.level}</span>;\n  };\n\n  return (\n    <main className=\"p-6 max-w-2xl mx-auto space-y-6\">\n      <h1 className=\"text-xl font-semibold\">Lobby</h1>\n      <p className=\"text-sm text-gray-500\">Join to edit teams and lineup. Viewers can only see participants.</p>\n      <section className=\"space-y-3\">\n        <ul className=\"divide-y border rounded\">\n          {participants.map((p)=> (\n            <li key={p.id} className=\"p-2 flex justify-between items-center\">\n              <button onClick={()=>setSelected(p)} className={`text-left ${p.role==='owner'?'font-bold text-gray-900':''}`}>\n                {p.isGuest ? (p.guestName || 'Guest Player') : (p.user?.displayName || p.user?.handle)}\n                <MVPBadge p={p} />\n                {p.role==='owner' && <span className=\"ml-1 text-xs text-gray-500\">(owner)</span>}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      {selected && (\n        <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center\" onClick={()=>setSelected(null)}>\n          <div className=\"bg-white text-black rounded p-4 w-80\" onClick={(e)=>e.stopPropagation()}>\n            <h2 className=\"text-lg font-semibold mb-2\">Player Profile Card</h2>\n            <p className=\"text-sm mb-2\">{selected.isGuest ? (selected.guestName||'Guest Player') : (selected.user?.displayName || selected.user?.handle)}</p>\n            {!selected.isGuest && selectedCard && (\n              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                <div><span className=\"text-gray-500\">Foot:</span> {selectedCard.foot || '-'}</div>\n                <div><span className=\"text-gray-500\">Pace:</span> {selectedCard.pace ?? '-'}</div>\n                <div><span className=\"text-gray-500\">Shoot:</span> {selectedCard.shoot ?? '-'}</div>\n                <div><span className=\"text-gray-500\">Pass:</span> {selectedCard.pass ?? '-'}</div>\n                <div><span className=\"text-gray-500\">Defend:</span> {selectedCard.defend ?? '-'}</div>\n              </div>\n            )}\n            <button className=\"mt-4 border px-3 py-1 rounded\" onClick={()=>setSelected(null)}>Close</button>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}\n\n\n"],"names":[],"mappings":"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","ignoreList":[0]}