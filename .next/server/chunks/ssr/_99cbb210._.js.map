{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/src/app/ev/[code]/mvp/page.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\n\r\n\r\ntype Participant = { id: string; isGuest: boolean; guestName: string|null; user?: { id: string; displayName: string; handle: string } };\r\n\r\ntype Poll = { id: string; startsAt: string; endsAt: string; finalized: boolean; votes: { voterParticipantId: string; targetParticipantId: string }[] };\r\n\r\nexport default function MVPPage() {\r\n  const params = useParams<{ code: string }>();\r\n  const router = useRouter();\r\n  const [eventId, setEventId] = useState<string | null>(null);\r\n  const [participants, setParticipants] = useState<Participant[]>([]);\r\n  const [poll, setPoll] = useState<Poll | null>(null);\r\n  const [mePartId, setMePartId] = useState<string | null>(null);\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const code = params?.code as string;\r\n    if (!code) return;\r\n    const run = async () => {\r\n      const e = await fetch(`/api/events?code=${encodeURIComponent(code)}`).then(r=>r.json());\r\n      setEventId(e.id);\r\n      const [plist, pollResp, me] = await Promise.all([\r\n        fetch(`/api/events/${e.id}/participants`).then(r=>r.json()),\r\n        fetch(`/api/events/${e.id}/poll`).then(r=>r.ok?r.json():null).catch(()=>null),\r\n        fetch('/api/me').then(r=>r.ok?r.json():null).catch(()=>null),\r\n      ]);\r\n      setParticipants(plist);\r\n      setPoll(pollResp);\r\n      if (me?.id) {\r\n        const mine = plist.find((p: Participant)=>p.user?.id===me.id);\r\n        setMePartId(mine?.id || null);\r\n      }\r\n    };\r\n    run();\r\n  }, [params?.code]);\r\n\r\n  const vote = async (targetParticipantId: string) => {\r\n    if (!poll?.id || !mePartId) return;\r\n    setBusy(true);\r\n    try {\r\n      await fetch(`/api/polls/${poll.id}/vote`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ voterParticipantId: mePartId, targetParticipantId }) });\r\n      router.push(`/ev/${params.code}/teams`);\r\n    } finally { setBusy(false); }\r\n  };\r\n\r\n  if (!poll || !eventId) return <main className=\"p-6 max-w-xl mx-auto\">Loadingâ€¦</main>;\r\n\r\n  const now = new Date();\r\n  const startsAt = new Date(poll.startsAt);\r\n  const endsAt = new Date(poll.endsAt);\r\n  if (poll.finalized || now < startsAt || now > endsAt) {\r\n    return (\r\n      <main className=\"p-6 max-w-xl mx-auto space-y-2\">\r\n        <h1 className=\"text-xl font-semibold\">MVP Voting</h1>\r\n        <p className=\"text-sm text-gray-600\">Voting is not active.</p>\r\n        <button className=\"border px-3 py-1 rounded\" onClick={()=>router.push(`/ev/${params.code}/teams`)}>Back</button>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"p-6 max-w-xl mx-auto space-y-4\">\r\n      <h1 className=\"text-xl font-semibold\">MVP Voting</h1>\r\n      <p className=\"text-sm text-gray-600\">Select the MVP for this match.</p>\r\n      <ul className=\"divide-y border rounded\">\r\n        {participants.map((p)=> (\r\n          <li key={p.id} className=\"p-2 flex items-center justify-between\">\r\n            <span className=\"text-sm\">{p.isGuest ? (p.guestName || 'Guest Player') : (p.user?.displayName || p.user?.handle)}</span>\r\n            <button disabled={!mePartId || busy} onClick={()=>vote(p.id)} className=\"border rounded px-2 py-1 text-sm disabled:opacity-50\">Vote</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}