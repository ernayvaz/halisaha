{"version":3,"sources":["turbopack:///[project]/src/lib/prisma.ts","turbopack:///[project]/src/app/api/cron/match-timers/route.ts","turbopack:///[project]/src/app/api/cron/cleanup/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var __prisma__: PrismaClient | undefined;\n}\n\nexport const prisma: PrismaClient =\n  global.__prisma__ ||\n  new PrismaClient({\n    log: ['error', 'warn'],\n    datasources: {\n      db: {\n        url: process.env.DATABASE_URL + '&connect_timeout=60&pool_timeout=60&socket_timeout=60'\n      }\n    }\n  });\n\nif (process.env.NODE_ENV !== 'production') {\n  global.__prisma__ = prisma;\n}\n\n\n","import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport webpush from 'web-push';\n\nfunction getEventTimes(e: { date: Date|null; startTime: string|null; durationMinutes: number|null }) {\n  if (!e.date || !e.startTime) return null;\n  const [h,m] = (e.startTime||'00:00').split(':').map(Number);\n  const start = new Date(e.date); start.setHours(h||0, m||0, 0, 0);\n  const end = new Date(start.getTime() + (e.durationMinutes??60) * 60 * 1000);\n  return { start, end };\n}\n\nexport async function POST() {\n  const now = new Date();\n  // Also perform snapshot cleanup to avoid needing a separate cron\n  await prisma.historySnapshot.deleteMany({ where: { ttlAt: { lte: now } } });\n  const events = await prisma.event.findMany({ where: { status: 'open' } });\n  let pushed = 0;\n  for (const e of events) {\n    const t = getEventTimes({ date: e.date, startTime: e.startTime, durationMinutes: e.durationMinutes });\n    if (!t) continue;\n\n    // Pre-game reminders at T-3h/2h/1h\n    const diffMs = t.start.getTime() - now.getTime();\n    const hoursAhead = Math.ceil(diffMs / (60*60*1000));\n    const should3 = hoursAhead===3 && !e.preNotify3hSent;\n    const should2 = hoursAhead===2 && !e.preNotify2hSent;\n    const should1 = hoursAhead===1 && !e.preNotify1hSent;\n    if (should3 || should2 || should1) {\n      const title = 'Match reminder';\n      const body = `Match starts in ${hoursAhead} hour${hoursAhead>1?'s':''}`;\n      await pushAll(title, body);\n      await prisma.event.update({ where: { id: e.id }, data: { preNotify3hSent: should3?true:e.preNotify3hSent, preNotify2hSent: should2?true:e.preNotify2hSent, preNotify1hSent: should1?true:e.preNotify1hSent } });\n      pushed++;\n    }\n\n    // Mark event finished at scheduled end time\n    if (now >= t.end && e.status === 'open') {\n      await prisma.event.update({ where: { id: e.id }, data: { status: 'finished' } });\n    }\n\n    // MVP open at end+10m (also handled for finished events below)\n    const mvpOpen = new Date(t.end.getTime() + 10*60*1000);\n    if (now >= mvpOpen) {\n      const poll = await prisma.mVPPoll.upsert({ where: { eventId: e.id }, update: {}, create: { eventId: e.id, startsAt: mvpOpen, endsAt: new Date(mvpOpen.getTime()+30*60*1000) } });\n      if (!poll.finalized && !poll.notifSent) {\n        await pushAll('MVP voting started', 'Open the link to vote your MVP');\n        await prisma.mVPPoll.update({ where: { id: poll.id }, data: { notifSent: true } });\n        pushed++;\n      }\n    }\n  }\n  // Process finished events: ensure MVP poll opens at end+10m and auto-reset after poll finalized+grace\n  const finished = await prisma.event.findMany({ where: { status: 'finished' } });\n  let resets = 0;\n  const GRACE_MINUTES = 60; // configurable grace window after poll end\n  for (const e of finished) {\n    const t = getEventTimes({ date: e.date, startTime: e.startTime, durationMinutes: e.durationMinutes });\n    if (t) {\n      const mvpOpen = new Date(t.end.getTime() + 10*60*1000);\n      if (now >= mvpOpen) {\n        const poll = await prisma.mVPPoll.upsert({ where: { eventId: e.id }, update: {}, create: { eventId: e.id, startsAt: mvpOpen, endsAt: new Date(mvpOpen.getTime()+30*60*1000) } });\n        if (!poll.finalized && !poll.notifSent) {\n          await pushAll('MVP voting started', 'Open the link to vote your MVP');\n          await prisma.mVPPoll.update({ where: { id: poll.id }, data: { notifSent: true } });\n          pushed++;\n        }\n      }\n    }\n    const poll = await prisma.mVPPoll.findUnique({ where: { eventId: e.id } });\n    if (!poll || !poll.finalized || !poll.endsAt) continue;\n    const graceAt = new Date(poll.endsAt.getTime() + GRACE_MINUTES * 60 * 1000);\n    if (now < graceAt) continue;\n    // Reset event: clear teams/assignments/positions/participants/poll; keep users and history snapshots\n    const teams = await prisma.team.findMany({ where: { eventId: e.id }, select: { id: true } });\n    const teamIds = teams.map(t => t.id);\n    await prisma.$transaction([\n      prisma.lineupPosition.deleteMany({ where: { teamId: { in: teamIds } } }),\n      prisma.assignment.deleteMany({ where: { teamId: { in: teamIds } } }),\n      prisma.team.deleteMany({ where: { eventId: e.id } }),\n      prisma.participant.deleteMany({ where: { eventId: e.id } }),\n      prisma.mVPPoll.deleteMany({ where: { eventId: e.id } }),\n      prisma.event.update({ where: { id: e.id }, data: { status: 'open', rosterLocked: false, lineupLocked: false, preNotify1hSent: false, preNotify2hSent: false, preNotify3hSent: false } })\n    ]);\n    resets++;\n  }\n  return NextResponse.json({ pushed, resets });\n}\n\n// Some Vercel plans/UI only create GET cron jobs. Mirror logic for GET.\nexport async function GET(_req: NextRequest) {\n  return POST();\n}\n\nasync function pushAll(title: string, body: string) {\n  const subs = await prisma.pushSubscription.findMany();\n  const vapidPublic = process.env.VAPID_PUBLIC_KEY; const vapidPrivate = process.env.VAPID_PRIVATE_KEY; const vapidEmail = process.env.VAPID_EMAIL || 'mailto:admin@example.com';\n  if (!vapidPublic || !vapidPrivate) return;\n  webpush.setVapidDetails(vapidEmail, vapidPublic, vapidPrivate);\n  const payload = JSON.stringify({ title, body });\n  await Promise.all(subs.map(async (s)=>{ try { await webpush.sendNotification({ endpoint: s.endpoint, keys: { p256dh: s.p256dh, auth: s.auth } } as any, payload); } catch {} }));\n}\n\n\n","import { POST as RunTimers } from '../match-timers/route';\n\n// Reuse the comprehensive cron handler to support single-cron setups\nexport const POST = RunTimers;\nexport const GET = RunTimers;\n\n\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/cron/cleanup/route\",\n        pathname: \"/api/cron/cleanup\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/cron/cleanup/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/cron/cleanup/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[3]}